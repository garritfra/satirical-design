{"dependencies":[{"name":"/Users/garritfra/Documents/dev/GitHub/satirical-ui/package.json","includedInParent":true,"mtime":1522087999878},{"name":"/Users/garritfra/Documents/dev/GitHub/satirical-ui/.babelrc","includedInParent":true,"mtime":1522086398486},{"name":"/Users/garritfra/Documents/dev/GitHub/satirical-ui/node_modules/fbjs/package.json","includedInParent":true,"mtime":1522086809246}],"generated":{"js":"\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;"},"hash":"9c8f8e5433d9a6ad6f9799071c4ef456","cacheData":{"env":{}}}